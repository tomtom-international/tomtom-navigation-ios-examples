
name: Build
on: 
  push:
  schedule:
    - cron: '0 2 * * *'
env:
  device_name: 'iPhone 14'
jobs:
  build:
    name: Compile the code
    runs-on: macos-latest
    steps:
      - name: Configure Artifactory Access
        uses: extractions/netrc@v1
        with:
          machine: repositories.tomtom.com
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          # cleanup caches
          rm -rf ~/Library/Caches/CocoaPods/Pods/Specs/Release/TomTomSDK*
          rm -rf ~/Library/Caches/CocoaPods/Pods/Release/TomTomSDK*
          rm -rf ~/.cocoapods/repos/tomtom-sdk-cocoapods
          rm -rf ~/.cocoapods/repos-art/tomtom-sdk-cocoapods
          rm -rf Pods

          # add cocoapods repo
          gem install cocoapods-art
          pod repo-art add tomtom-sdk-cocoapods "https://repositories.tomtom.com/artifactory/api/pods/cocoapods"
          pod repo-art update tomtom-sdk-cocoapods
          pod deintegrate

          # install dependencies
          pod install --repo-update

          # empty content of .netrc file
          echo -n > ~/.netrc
        shell: bash

      - name: Build
        run:
          xcodebuild -workspace 'TomTom SDK Examples.xcworkspace' -scheme 'TomTom SDK Examples' -destination 'platform=iOS Simulator,name=${{ env.device_name }}'
          
      - name: Send custom JSON data to Slack workflow
        if: ${{ failure() }}
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
